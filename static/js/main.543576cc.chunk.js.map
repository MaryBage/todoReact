{"version":3,"sources":["context/firebase/firebaseContext.js","components/Form.js","components/Notes.js","components/Loader.js","pages/Home.js","context/firebase/firebaseReducer.js","context/types.js","context/firebase/FirebaseState.js","App.js","serviceWorker.js","index.js"],"names":["FirebaseContext","createContext","Form","useState","value","setValue","setSearchVal","filterValue","setFilterValue","firebase","useContext","filterHandler","event","preventDefault","fetchNotes","target","catch","e","Error","message","onSubmit","console","log","trim","addNote","then","className","type","placeholder","onChange","searchNotes","name","checked","icon","solidStar","regStar","Notes","notes","onRemove","onUpdate","TransitionGroup","component","map","note","CSSTransition","key","id","classNames","timeout","ifDone","onClick","title","Loader","role","Home","loading","removeNote","updateNote","useEffect","handlers","state","payload","filter","firebaseReducer","action","DEFAULT","url","FirebaseState","children","useReducer","dispatch","showLoader","a","filt","axios","get","res","Object","keys","data","todo","post","delete","resNote","put","val","includes","Provider","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.543576cc.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nexport const FirebaseContext = createContext();","import React, { useState, useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar as solidStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { faStar as regStar } from '@fortawesome/free-regular-svg-icons'\r\nimport { FirebaseContext } from '../context/firebase/firebaseContext';\r\n\r\nexport const Form = () => {\r\n    const [value, setValue] = useState('');\r\n    const [searchVal, setSearchVal] = useState(false);\r\n    const [filterValue, setFilterValue] = useState('');\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const submitHandler =  event => {\r\n        console.log(event.target.value)\r\n        event.preventDefault();\r\n        setFilterValue('');\r\n        if(value.trim()){\r\n            firebase.fetchNotes()\r\n            .catch((e) => {throw new Error(e.message)});\r\n            firebase.addNote(value.trim())\r\n            .then (() => setValue(''))\r\n            .catch((e) => {throw new Error(e.message)});\r\n        }\r\n    }\r\n\r\n    const searchHandler =  event => {\r\n        event.preventDefault();\r\n        firebase.searchNotes(event.target.value)\r\n        .catch((e) => {throw new Error(e.message)});\r\n        setSearchVal(event.target.value)\r\n    }\r\n\r\n    const filterHandler =  event => {\r\n        event.preventDefault();\r\n        firebase.fetchNotes(event.target.value)\r\n        .catch((e) => {throw new Error(e.message)});\r\n        setFilterValue(event.target.value)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n        <form onSubmit={submitHandler}>\r\n          \r\n            <div className='form-group'>\r\n                <input \r\n                type='text' \r\n                className='form-control'\r\n                placeholder='Add task'\r\n                value = {value}\r\n                onChange = {e => setValue(e.target.value)}\r\n                 />\r\n            </div>\r\n        </form>\r\n                 <input \r\n                type='text' \r\n                className='form-control'\r\n                placeholder='Search'\r\n                onChange = {searchHandler}\r\n                 />\r\n                 <div className='radios'>\r\n                     <div>filter by: </div>\r\n                     <label> <input\r\n                        type='radio' \r\n                        name='filter'\r\n                        value=''\r\n                        checked={filterValue == '' ? 'checked' : ''}\r\n                        onChange = {filterHandler}\r\n                       />All</label>\r\n\r\n                        <label> <input \r\n                        type='radio' \r\n                        name='filter' \r\n                        value = 'done'\r\n                        checked={filterValue == 'done' ? 'checked' : ''}\r\n                        onChange = {filterHandler}\r\n                        \r\n                        /><FontAwesomeIcon icon={solidStar} /></label>\r\n\r\n                        <label><input \r\n                        type='radio' \r\n                        name='filter'\r\n                        value = 'notDone'\r\n                        checked={filterValue == 'notDone' ? 'checked' : ''}\r\n                        onChange = {filterHandler}\r\n                       \r\n                        /><FontAwesomeIcon icon={regStar} /></label>\r\n                </div>\r\n\r\n           \r\n        </div>\r\n\r\n    )\r\n\r\n};\r\n\r\n ","import React,{useState} from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar as solidStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { faEdit, faStar as regStar } from '@fortawesome/free-regular-svg-icons'\r\nimport {TCSSTransition, TransitionGroup, CSSTransition} from 'react-transition-group'\r\n\r\nexport const Notes = ({notes, onRemove, onUpdate}) => {\r\n\r\n    return (\r\n        \r\n        <TransitionGroup component='ul' className='list-group list-group-flush'>\r\n            \r\n            {notes.map(note => (\r\n                <CSSTransition \r\n                key={note.id}\r\n                classNames={'note'}\r\n                timeout={800}>\r\n                    <li className='list-group-item note'> \r\n                        <div><FontAwesomeIcon icon={note.ifDone ? solidStar : regStar} /></div>\r\n                        <div onClick ={() => onUpdate(note.id,'ifDone')} className={note.ifDone ? 'pointer txtDec' :  'pointer'}><strong> {note.title}</strong></div>\r\n                        <div onClick ={() => onRemove(note.id)} className=\"pointer red\">&#10008;</div>\r\n                \r\n                    </li>\r\n                </CSSTransition>\r\n               \r\n             )) }\r\n            \r\n        </TransitionGroup>\r\n    )\r\n\r\n};\r\n\r\n","import React from 'react'\r\n\r\nexport const Loader = () => (\r\n  <div className=\"text-center\">\r\n    <div className=\"spinner-border\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  </div>\r\n)","import React, {useContext, useEffect,createContext} from 'react'\r\nimport {Form} from '../components/Form'\r\nimport {Notes} from '../components/Notes'\r\nimport {FirebaseContext} from '../context/firebase/firebaseContext'\r\nimport {Loader} from '../components/Loader'\r\n\r\nconst Home = () => {\r\n  const {loading, notes, fetchNotes, removeNote, updateNote} = useContext(FirebaseContext)\r\n  \r\n\r\n  useEffect(() => {\r\n    fetchNotes()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Form />\r\n\r\n      <hr/>\r\n\r\n      {loading\r\n        ? <Loader />\r\n        : <Notes notes={notes} onRemove={removeNote} onUpdate={updateNote} />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home;","import {ADD_NOTE, FETCH_NOTES, REMOVE_NOTE,UPDATE_NOTE, SHOW_LOADER} from '../types'\r\n\r\nconst handlers = {\r\n  [SHOW_LOADER]: state => ({...state, loading: true}),\r\n  [ADD_NOTE]: (state, {payload}) => ({\r\n    ...state,\r\n    notes: [...state.notes, payload]\r\n  }),\r\n  [FETCH_NOTES]: (state, {payload}) => ({...state, notes: payload, loading: false}),\r\n  [REMOVE_NOTE]: (state, {payload}) => ({\r\n    ...state,\r\n    notes: state.notes.filter(note => note.id !== payload)\r\n  }),\r\n  DEFAULT: state => state\r\n}\r\n\r\nexport const firebaseReducer = (state, action) => {\r\n  const handle = handlers[action.type] || handlers.DEFAULT\r\n  return handle(state, action)\r\n}","export const SHOW_ALERT = 'SHOW_ALERT';\r\nexport const HIDE_ALERT = 'HIDE_ALERT';\r\n\r\nexport const SHOW_LOADER = 'SHOW_LOADER';\r\nexport const ADD_NOTE = 'ADD_NOTE';\r\nexport const FETCH_NOTES = 'FETCH_NOTES';\r\nexport const REMOVE_NOTE = 'REMOVE_NOTE';\r\nexport const UPDATE_NOTE = 'UPDATE_NOTE';\r\n","\r\nimport React, {useReducer} from 'react'\r\nimport axios from 'axios'\r\nimport {FirebaseContext} from './firebaseContext'\r\nimport {firebaseReducer} from './firebaseReducer'\r\nimport {ADD_NOTE, FETCH_NOTES, REMOVE_NOTE,UPDATE_NOTE, SHOW_LOADER} from '../types'\r\n\r\nconst url = 'https://react-todo-801aa.firebaseio.com'\r\n\r\nexport const FirebaseState = ({children}) => {\r\n\r\n  const initialState = {\r\n    notes: [],\r\n    loading: false\r\n  }\r\n  const [state, dispatch] = useReducer(firebaseReducer, initialState)\r\n\r\n  const showLoader = () => dispatch({type: SHOW_LOADER})\r\n\r\n  const fetchNotes = async (filt = '') => {\r\n    showLoader();\r\n    \r\n    const res = await axios.get(`${url}/notes.json`)\r\n    \r\n    let payload = Object.keys(res.data).map(key => {\r\n      return {\r\n        ...res.data[key],\r\n        id: key\r\n      }\r\n    })\r\n    \r\n    if(filt){\r\n      switch (filt){\r\n        case 'done':\r\n          payload = payload.filter(todo => todo.ifDone)\r\n        break;\r\n        case 'notDone':\r\n          payload = payload.filter(todo => !todo.ifDone)\r\n        break;\r\n       }\r\n\r\n    }\r\n   \r\n    dispatch({type: FETCH_NOTES, payload})\r\n  }\r\n\r\n  const addNote = async title => {\r\n    const note = {\r\n      title, ifDone: false\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(`${url}/notes.json`, note)\r\n      const payload = {\r\n        ...note,\r\n        id: res.data.name\r\n      }\r\n\r\n      dispatch({type: ADD_NOTE, payload})\r\n\r\n    } catch (e) {\r\n      throw new Error(e.message)\r\n    }\r\n  }\r\n\r\n  const removeNote = async id => {\r\n    await axios.delete(`${url}/notes/${id}.json`)\r\n\r\n    dispatch({\r\n      type: REMOVE_NOTE,\r\n      payload: id\r\n    })\r\n  }\r\n  const updateNote = async (id) => {\r\n\r\n      const resNote = await axios.get(`${url}/notes/${id}.json`);\r\n      const note = {...resNote.data, ifDone: !resNote.data.ifDone};\r\n      await axios.put(`${url}/notes/${id}.json`, note);\r\n      const res = await axios.get(`${url}/notes.json`)\r\n      const payload = Object.keys(res.data).map(key => {\r\n      return {\r\n        ...res.data[key],\r\n        id: key\r\n      }\r\n    })\r\n    dispatch({type: FETCH_NOTES, payload})\r\n   }\r\n  const searchNotes = async (val) => {\r\n\r\n   const res = await axios.get(`${url}/notes.json`)\r\n    \r\n    let payload = Object.keys(res.data).map(key => {\r\n      return {\r\n        ...res.data[key],\r\n        id: key\r\n      }\r\n    })\r\n\r\n    payload = payload.filter(todo => todo.title.includes(val))\r\n    dispatch({type: FETCH_NOTES, payload})\r\n\r\n}\r\n\r\n  return (\r\n    <FirebaseContext.Provider value={{\r\n      showLoader, addNote, removeNote,updateNote, fetchNotes,searchNotes,\r\n      loading: state.loading,\r\n      notes: state.notes\r\n    }}>\r\n      {children}\r\n    </FirebaseContext.Provider>\r\n  )\r\n}\r\n","import React from 'react';\nimport Home from './pages/Home';\n\nimport { FirebaseState } from './context/firebase/FirebaseState';\n\nfunction App() {\n  return (\n    <FirebaseState>\n      <Home/>\n    </FirebaseState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}